/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package classcalculator;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import java.util.EmptyStackException;
import java.util.Stack;
/**
 *
 * @author User1
 */
public class RnpCalculator extends javax.swing.JFrame {

    /**
     * Creates new form RnpCalculator
     */
    //changed
    String[] storedValues;
    String display = "";
    int recall;
    CalculatorFunctions cal = new CalculatorFunctions();
    
    int period,numPer=0,count = 0,counter=0,numOfPayments,paymentNum=0;
    double amount,rate,payment;
    double numAmt=0,numRate =0,paymentAmt=0;
    
    boolean done = true; 
    
    //sipho
      Stack<String> stack  = new Stack();
      String number = "";
      boolean flag = false;
      
      DecimalFormat form = new DecimalFormat();
      DecimalFormat f = new DecimalFormat();
      
      String fractionDigit = "";
      boolean isFraction = false;
      
     double hold;
    //sipho
    
   
    public RnpCalculator() {
        initComponents();
        jLabel1.setText(null);
        jTextArea1.setEditable(false);
        setLocationRelativeTo(null);
        setTitle("RPN Calculator");
       
        
        //sipho
           form.setMaximumFractionDigits(2);
        form.setMinimumFractionDigits(0);
        
        f.setMaximumFractionDigits(9);
        f.setMinimumFractionDigits(0);
        
        
         storedValues = new String[3];

        storedValues[0] = "No value stored";
        storedValues[1] = "No value stored";
        storedValues[2] = "No value stored";
        //sipho
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton15 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        PV = new javax.swing.JButton();
        FV = new javax.swing.JButton();
        PVa = new javax.swing.JButton();
        PVad = new javax.swing.JButton();
        FVa = new javax.swing.JButton();
        FVad = new javax.swing.JButton();
        BLp = new javax.swing.JButton();
        RRR = new javax.swing.JButton();
        n = new javax.swing.JButton();
        STO1 = new javax.swing.JButton();
        STO2 = new javax.swing.JButton();
        ST03 = new javax.swing.JButton();
        CLRSTO = new javax.swing.JButton();
        One = new javax.swing.JButton();
        Two = new javax.swing.JButton();
        Three = new javax.swing.JButton();
        Four = new javax.swing.JButton();
        Five = new javax.swing.JButton();
        Six = new javax.swing.JButton();
        Seven = new javax.swing.JButton();
        Eight = new javax.swing.JButton();
        Nine = new javax.swing.JButton();
        Zero = new javax.swing.JButton();
        Exponent = new javax.swing.JButton();
        Dot = new javax.swing.JButton();
        Addition = new javax.swing.JButton();
        Enter = new javax.swing.JButton();
        RCL = new javax.swing.JButton();
        Multiplication = new javax.swing.JButton();
        Division = new javax.swing.JButton();
        pButton = new javax.swing.JButton();
        Subtraction = new javax.swing.JButton();
        Clearall = new javax.swing.JButton();
        jButton35 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        calcSwapBtn = new javax.swing.JButton();
        squaredButton = new javax.swing.JButton();
        squareRootButton = new javax.swing.JButton();
        squaredNumButton = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Help = new javax.swing.JMenu();

        jButton15.setText("jButton15");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        PV.setText("PV");
        PV.setToolTipText("Present Value");
        PV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PVActionPerformed(evt);
            }
        });

        FV.setText("FV");
        FV.setToolTipText("Future Value");
        FV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FVActionPerformed(evt);
            }
        });

        PVa.setText("PVa");
        PVa.setToolTipText("Present Value Annuity");
        PVa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PVaActionPerformed(evt);
            }
        });

        PVad.setText("PVad");
        PVad.setToolTipText("Present Value Annuity Due");
        PVad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PVadActionPerformed(evt);
            }
        });

        FVa.setText("FVa");
        FVa.setToolTipText("Future Value Annuity");
        FVa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FVaActionPerformed(evt);
            }
        });

        FVad.setText("FVad");
        FVad.setToolTipText("Future Vulue Annuity Due");
        FVad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FVadActionPerformed(evt);
            }
        });

        BLp.setText("BLp");
        BLp.setToolTipText("Balloon Payment");
        BLp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BLpActionPerformed(evt);
            }
        });

        RRR.setText("RRR");
        RRR.setToolTipText("Required Rate Return ");
        RRR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RRRActionPerformed(evt);
            }
        });

        n.setText("n");
        n.setToolTipText("Number of Periods");
        n.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nActionPerformed(evt);
            }
        });

        STO1.setForeground(new java.awt.Color(51, 255, 51));
        STO1.setText("STO 1");
        STO1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                STO1ActionPerformed(evt);
            }
        });

        STO2.setForeground(new java.awt.Color(51, 255, 51));
        STO2.setText("STO 2");
        STO2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                STO2ActionPerformed(evt);
            }
        });

        ST03.setForeground(new java.awt.Color(51, 255, 51));
        ST03.setText("STO 3");
        ST03.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ST03ActionPerformed(evt);
            }
        });

        CLRSTO.setForeground(new java.awt.Color(153, 0, 204));
        CLRSTO.setText("CLR STO REG");

        One.setText("1");
        One.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OneActionPerformed(evt);
            }
        });

        Two.setText("2");
        Two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TwoActionPerformed(evt);
            }
        });

        Three.setText("3");
        Three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThreeActionPerformed(evt);
            }
        });

        Four.setText("4");
        Four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FourActionPerformed(evt);
            }
        });

        Five.setText("5");
        Five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiveActionPerformed(evt);
            }
        });

        Six.setText("6");
        Six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SixActionPerformed(evt);
            }
        });

        Seven.setText("7");
        Seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SevenActionPerformed(evt);
            }
        });

        Eight.setText("8");
        Eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EightActionPerformed(evt);
            }
        });

        Nine.setText("9");
        Nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NineActionPerformed(evt);
            }
        });

        Zero.setText("0");
        Zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZeroActionPerformed(evt);
            }
        });

        Exponent.setText("E");
        Exponent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExponentActionPerformed(evt);
            }
        });

        Dot.setText(".");
        Dot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DotActionPerformed(evt);
            }
        });

        Addition.setText("+");
        Addition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdditionActionPerformed(evt);
            }
        });

        Enter.setForeground(new java.awt.Color(0, 0, 255));
        Enter.setText("ENTER");
        Enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterActionPerformed(evt);
            }
        });

        RCL.setText("RCL");
        RCL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RCLActionPerformed(evt);
            }
        });

        Multiplication.setText("*");
        Multiplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MultiplicationActionPerformed(evt);
            }
        });

        Division.setText("/");
        Division.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DivisionActionPerformed(evt);
            }
        });

        pButton.setForeground(new java.awt.Color(204, 0, 0));
        pButton.setText("P");
        pButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pButtonActionPerformed(evt);
            }
        });

        Subtraction.setText("-");
        Subtraction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubtractionActionPerformed(evt);
            }
        });

        Clearall.setForeground(new java.awt.Color(255, 51, 51));
        Clearall.setText("CL ALL");
        Clearall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearallActionPerformed(evt);
            }
        });

        jButton35.setText("CE");
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });

        jButton36.setText("+/-");
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });

        calcSwapBtn.setText("Choose Calc");
        calcSwapBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcSwapBtnActionPerformed(evt);
            }
        });

        squaredButton.setText("x^2");
        squaredButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squaredButtonActionPerformed(evt);
            }
        });

        squareRootButton.setText("√");
        squareRootButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squareRootButtonActionPerformed(evt);
            }
        });

        squaredNumButton.setText("x^y");
        squaredNumButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squaredNumButtonActionPerformed(evt);
            }
        });

        jRadioButton1.setText("Use Keyboard");
        jRadioButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jRadioButton1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(FVad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PV, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(FV, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BLp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PVa, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RRR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PVad, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(n, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(FVa, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Seven, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(Zero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Exponent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(Eight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(12, 12, 12)
                                                .addComponent(Dot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(Nine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(One)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(Four, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(11, 11, 11)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Five, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(Two, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Six, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(Three, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Addition, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(STO1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(STO2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Enter, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                                    .addComponent(ST03, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CLRSTO)
                                    .addComponent(RCL, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Subtraction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Multiplication, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(Division, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(pButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(squaredButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(squaredNumButton))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton36)
                                            .addComponent(Clearall))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(3, 3, 3)
                                                .addComponent(calcSwapBtn))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(38, 38, 38)
                                                .addComponent(squareRootButton))))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PV)
                    .addComponent(FV)
                    .addComponent(PVa)
                    .addComponent(PVad)
                    .addComponent(FVa))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FVad)
                    .addComponent(BLp)
                    .addComponent(RRR)
                    .addComponent(n))
                .addGap(2, 2, 2)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(STO1)
                    .addComponent(STO2)
                    .addComponent(ST03)
                    .addComponent(CLRSTO))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(One)
                                .addComponent(Two)
                                .addComponent(Three))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Four)
                                .addComponent(Five)
                                .addComponent(Six))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Seven)
                                .addComponent(Eight)
                                .addComponent(Nine))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Zero)
                                .addComponent(Exponent)
                                .addComponent(Dot)))
                        .addComponent(Addition, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Enter)
                            .addComponent(RCL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Multiplication)
                            .addComponent(Division)
                            .addComponent(pButton)
                            .addComponent(squaredButton)
                            .addComponent(squaredNumButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Subtraction)
                            .addComponent(Clearall)
                            .addComponent(squareRootButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton35)
                            .addComponent(jButton36)
                            .addComponent(calcSwapBtn))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton1)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        Help.setText("Help");
        Help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpActionPerformed(evt);
            }
        });
        jMenuBar1.add(Help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ClearallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearallActionPerformed
        // TODO add your handling code here:
        jTextArea1.setText(null);
        flag= true;
       /* pButton.setActionCommand(null);
        FV.setActionCommand(null);
        FVa.setActionCommand(null);
        FVad.setActionCommand(null);
        PV.setActionCommand(null);
        PVa.setActionCommand(null);
        PVad.setActionCommand(null);
        BLp.setActionCommand(null);
        RRR.setActionCommand(null);
        n.setActionCommand(null);
        jLabel1.setText(null);*/
        
        jLabel1.setText(null);
         //displayPane.setText("");
        
         if(!stack.empty())
        stack.clear();
        
        //displayPane.setText("");
    }//GEN-LAST:event_ClearallActionPerformed

    private void HelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null,"Help Dialog"," This is an RPN Calculator; the "
                + "operator  buttons execute operations. Eg , to mutiply 2 and 3, press"
                + "2 ENTER 3 x and the result 6.00 will appear."
                + "All results show two decimal places- cents  as this is a financial calculator."
                + "Pressing the P button  and then  a function button such as PV will display a list"
                + "of values  to enter in the order to be entered."
                + "To use the function, click  the numbers to enter  the first value, click Enter"
                + "continue for each required value except the last-click the functiob button required"
                + "once the last value has been entered into the window,"
                + "and the result will appear"
                + "Too; tip texts  will display when the mouse pointer is held"
                + "over a non-numeric button."
                + "You can enter as many values as you like clicking 'ENTER'"
                + "after each one; this will push all these values on the stack."
                + "Each operator button clicked thereafter will operate on the "
                + "value in the window  and the next value on the stack , i.e."
                + "2 ENTER 3  ENTER 5 + x will produce 16.00"
                + "The STO buttons  will store  the value in the window in register"
                + "number on the button; to recall the value click RCL followed by the numberic "
                + "button that corresponds to the register number",JOptionPane.OK_OPTION);
    }//GEN-LAST:event_HelpActionPerformed

    private void PVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PVActionPerformed
        // TODO add your handling code here:
        //CalculatorFunctions calculatorFunctions = new CalculatorFunctions();
        PV.setActionCommand("future");
        DecimalFormat df = new DecimalFormat();
        df.setMaximumFractionDigits(2);
        df.setMinimumFractionDigits(2);
        ++count;
           jTextArea1.setText(null);
        //presentValue(1,1,1);
        if(!"clicked".equals(pButton.getActionCommand()) ){
            jLabel1.setText("Press P first");
        }else
        {
            
            if(count == 2)
            {
            //cal.presentValue(amount,rate,period);
            jTextArea1.setText(""+df.format(cal.presentValue(amount,rate,period)));
            count = 0;
            }else{
                jLabel1.setText("PV, rate, period");
                
            }
        }
      
    }//GEN-LAST:event_PVActionPerformed

    private void pButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pButtonActionPerformed
        // TODO add your handling code here:
        pButton.setActionCommand("clicked");
    }//GEN-LAST:event_pButtonActionPerformed

    private void FVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FVActionPerformed
        // TODO add your handling code here:
        FV.setActionCommand("future");
        DecimalFormat df = new DecimalFormat();
        df.setMaximumFractionDigits(2);
        df.setMinimumFractionDigits(2);
        ++count;
        jTextArea1.setText(null);
        //presentValue(1,1,1);
        if (!"clicked".equals(pButton.getActionCommand())) {
            jLabel1.setText("Press P first");
        } else {

            if (count == 2) {
                //cal.presentValue(amount,rate,period);
                jTextArea1.setText("" + df.format(cal.futureValue(amount, rate, period)));
                System.out.println(""+df.format(cal.futureValue(amount, rate, period)));
                 count = 0;
            } else {
                jLabel1.setText("FV, rate, period");

            }
        }
    }//GEN-LAST:event_FVActionPerformed

    private void ThreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThreeActionPerformed
        // TODO add your handling code here:
        Three.setText("3");
        int three = Integer.parseInt("3");
        numbers( three);
        //jTextArea1.setText(Three.getText());
        
             number = "3";
       
         if(flag == true) {
            jTextArea1.setText("");
            jTextArea1.setText(jTextArea1.getText() + number);
            flag = false;
        } else {
            jTextArea1.setText(jTextArea1.getText() + number);
        }
         
            if (recall == 1) {
            jTextArea1.setText(storedValues[2]);
            recall = 0;
        } else {
            display += 3;
            jTextArea1.setText(display);
        }
    }//GEN-LAST:event_ThreeActionPerformed

    private void TwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TwoActionPerformed
        // TODO add your handling code here:
         Two.setText("2");
        int two = Integer.parseInt("2");
        numbers( two);
        // jTextArea1.setText(Two.getText());
         
         
           number = "2";
        if(flag == true) {
            jTextArea1.setText("");
            jTextArea1.setText(jTextArea1.getText() + number);
            System.out.println(""+jTextArea1.getText());
            flag = false;
        } else {
            jTextArea1.setText(jTextArea1.getText() + number);
        }
        
         if (recall == 1) {
            jTextArea1.setText(storedValues[1]);
            recall = 0;
        } else {
            display += 2;
            jTextArea1.setText(display);
        }
    }//GEN-LAST:event_TwoActionPerformed

    private void OneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OneActionPerformed
        // TODO add your handling code here:
         One.setText("1");
        int one= Integer.parseInt("1");
        numbers( one);
        //jTextArea1.setText(One.getText());
        
        //sipho
        
               number = "1";
             
              if(flag == true) {
            jTextArea1.setText("");
            jTextArea1.setText(jTextArea1.getText() + number);
            flag = false;
        } else {
            jTextArea1.setText(jTextArea1.getText() + number);
        }
        
        //sipho
               if (recall == 1) {
            jTextArea1.setText(storedValues[0]);
            recall = 0;
        } else {
            display += 1;
            jTextArea1.setText(display);
        }
    }//GEN-LAST:event_OneActionPerformed

    private void FourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FourActionPerformed
        // TODO add your handling code here:
        Four.setText("4");
        int four = Integer.parseInt("4");
         numbers( four);
       //  jTextArea1.setText(Four.getText());
             number = "4";
       
         if(flag == true) {
            jTextArea1.setText("");
            jTextArea1.setText(jTextArea1.getText() + number);
            flag = false;
        } else {
            jTextArea1.setText(jTextArea1.getText() + number);
        }
         display += 4;
        jTextArea1.setText(display);
    }//GEN-LAST:event_FourActionPerformed

    private void FiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiveActionPerformed
        // TODO add your handling code here:
        Five.setText("5");
        int five = Integer.parseInt("5");
        numbers( five);
       
       // jTextArea1.setText(Five.getText());
       
        
           number = "5";
       
         if(flag == true) {
            jTextArea1.setText("");
            jTextArea1.setText(jTextArea1.getText() + number);
            flag = false;
        } else {
            jTextArea1.setText(jTextArea1.getText() + number);
        } 
         display += 5;
        jTextArea1.setText(display);
    }//GEN-LAST:event_FiveActionPerformed

    private void SixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SixActionPerformed
        // TODO add your handling code here:
        Six.setText("6");
        
        
        
        int six = Integer.parseInt("6");
       
   numbers( six);

       // jTextArea1.setText(Six.getText());
            number = "6";
       
       if(flag == true) {
            jTextArea1.setText("");
            jTextArea1.setText(jTextArea1.getText() + number);
            flag = false;
        } else {
            jTextArea1.setText(jTextArea1.getText() + number);
        }
       
        display += 6;
        jTextArea1.setText(display);
    }//GEN-LAST:event_SixActionPerformed

    private void SevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SevenActionPerformed
        // TODO add your handling code here:
         Seven.setText("7");
        int seven = Integer.parseInt("7");
         numbers( seven);
       //  jTextArea1.setText(Seven.getText());
         //sipho
         
               number = "7";
         if(flag == true) {
            jTextArea1.setText("");
            jTextArea1.setText(jTextArea1.getText() + number);
            flag = false;
        } else {
            jTextArea1.setText(jTextArea1.getText() + number);
        }
         //sipho
         
         display += 7;
        jTextArea1.setText(display);
    }//GEN-LAST:event_SevenActionPerformed

    private void EightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EightActionPerformed
        // TODO add your handling code here:
         Eight.setText("8");
        int eight = Integer.parseInt("8");
         numbers( eight);
       //  jTextArea1.setText(Eight.getText());
         
             number = "8";
       
        if(flag == true) {
            jTextArea1.setText("");
            jTextArea1.setText(jTextArea1.getText() + number);
            flag = false;
        } else {
            jTextArea1.setText(jTextArea1.getText() + number);
        }
        
         display += 8;
        jTextArea1.setText(display);
    }//GEN-LAST:event_EightActionPerformed

    private void NineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NineActionPerformed
        // TODO add your handling code here:
         Nine.setText("9");
        int nine = Integer.parseInt("9");
         numbers( nine);
        // jTextArea1.setText(Nine.getText());
         
           number = "9";
       
        if(flag == true) {
            jTextArea1.setText("");
            jTextArea1.setText(jTextArea1.getText() + number);
            flag = false;
        } else {
            jTextArea1.setText(jTextArea1.getText() + number);
        }
        
        display += 9;
        jTextArea1.setText(display);
    }//GEN-LAST:event_NineActionPerformed

    private void ZeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZeroActionPerformed
        // TODO add your handling code here:
         Zero.setText("0");
        int zero = Integer.parseInt("0");
         numbers( zero);
        // jTextArea1.setText(Zero.getText());
         
             number = "0";
        
       
        if(flag == true) {
            jTextArea1.setText("");
            jTextArea1.setText(jTextArea1.getText() + number);
            flag = false;
        } else {
            jTextArea1.setText(jTextArea1.getText() + number);
        }
        
        display += 0;
        jTextArea1.setText(display);
    }//GEN-LAST:event_ZeroActionPerformed

    private void ExponentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExponentActionPerformed
        // TODO add your handling code here:
         Exponent.setText(" 2.718");
        int Exponent = Integer.parseInt(" 2.718");
        
         display += "E";
        jTextArea1.setText(display);
    }//GEN-LAST:event_ExponentActionPerformed

    private void DotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DotActionPerformed
        // TODO add your handling code here:
           isFraction = true;
       
        appendFraction(".");
        
         display += ".";
        jTextArea1.setText(display);
    }//GEN-LAST:event_DotActionPerformed

    private void MultiplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MultiplicationActionPerformed
        // TODO add your handling code here:
            flag = true; 
        double n1 = 0,n2 = 0, sum = 0;
        
        stack.push(jTextArea1.getText());
        
        try{
        n1 = Double.parseDouble(stack.pop());
        n2 = Double.parseDouble(stack.pop());
        
        sum = n1 * n2;
        //stack.push(displayPane.getText());
        jTextArea1.setText(String.valueOf(form.format(sum))); 
        }
         catch(EmptyStackException e)
        {
           jTextArea1.setText("Syntax Error"); 
        }
        catch(NumberFormatException e)
        {
            jTextArea1.setText("Invalid Value");
        }
    }//GEN-LAST:event_MultiplicationActionPerformed

    private void DivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DivisionActionPerformed
        // TODO add your handling code here:
             flag = true;
        double n1 = 0,n2 = 0, sum = 0;
        
        stack.push(jTextArea1.getText());
        
        try{
       n1 = Double.parseDouble(stack.pop());
        n2 = Double.parseDouble(stack.pop());
        
        
        if( n1 != 0)
            
        {
        sum = n2 / n1;
       // stack.push(String.valueOf(displayPane.getText()));
        jTextArea1.setText(String.valueOf(form.format(sum)));
        }
        
        else
        {
            jTextArea1.setText("NaN");
        }
        }
         catch(EmptyStackException e)
        {
           jTextArea1.setText("Syntax Error"); 
        }
        catch(NumberFormatException e)
        {
            jTextArea1.setText("Invalid Value");
        }
    }//GEN-LAST:event_DivisionActionPerformed

    private void EnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterActionPerformed
        // TODO add your handling code here:
         flag= true;
        stack.push(jTextArea1.getText());
        jTextArea1.setText("");
        
        ++counter;
        amount = numAmt;
        jTextArea1.setText(null);
        rate = numRate;
        jTextArea1.setText(null);
        period = numPer;
        jTextArea1.setText(null);
        payment = paymentAmt;
        jTextArea1.setText(null);
        numOfPayments = paymentNum;
        jTextArea1.setText(null);
        
        
         
        
    }//GEN-LAST:event_EnterActionPerformed

    private void PVaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PVaActionPerformed
        // TODO add your handling code here:
        PVa.setActionCommand("future");
        DecimalFormat df = new DecimalFormat();
        df.setMaximumFractionDigits(2);
        df.setMinimumFractionDigits(2);
        ++count;
        jTextArea1.setText(null);
        //presentValue(1,1,1);
        if (!"clicked".equals(pButton.getActionCommand())) {
            jLabel1.setText("Press P first");
        } else {

            if (count == 2) {
                //cal.presentValue(amount,rate,period);
                jTextArea1.setText("" + df.format(cal.presentValueAnnuity(amount, rate, period)));
                 count = 0;
            } else {
                jLabel1.setText("PVa, rate, period");

            }
        }
    }//GEN-LAST:event_PVaActionPerformed

    private void PVadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PVadActionPerformed
        // TODO add your handling code here:
        PVad.setActionCommand("future");
        
        DecimalFormat df = new DecimalFormat();
        df.setMaximumFractionDigits(2);
        df.setMinimumFractionDigits(2);
        ++count;
        jTextArea1.setText(null);
        //presentValue(1,1,1);
        if (!"clicked".equals(pButton.getActionCommand())) {
            jLabel1.setText("Press P first");
        } else {

            if (count == 2) {
                //cal.presentValue(amount,rate,period);
                jTextArea1.setText("" + df.format(cal.presentValueAnnuityDue(amount, rate, period)));
                 count = 0;
            } else {
                jLabel1.setText("PVad, rate, period");

            }
        }
    }//GEN-LAST:event_PVadActionPerformed

    private void FVaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FVaActionPerformed
        // TODO add your handling code here:
        DecimalFormat df = new DecimalFormat();
        df.setMaximumFractionDigits(2);
        df.setMinimumFractionDigits(2);
        ++count;
        jTextArea1.setText(null);
        //presentValue(1,1,1);
        if (!"clicked".equals(pButton.getActionCommand())) {
            jLabel1.setText("Press P first");
        } else {

            if (count == 2) {
                //cal.presentValue(amount,rate,period);
                jTextArea1.setText("" + df.format(cal.futureValueAnnuity(amount, rate, period)));
                 count = 0;
            } else {
                jLabel1.setText("FVa, rate, period");

            }
        }
    }//GEN-LAST:event_FVaActionPerformed

    private void FVadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FVadActionPerformed
        // TODO add your handling code here:
        
        FVad.setActionCommand("future");
        DecimalFormat df = new DecimalFormat();
        df.setMaximumFractionDigits(2);
        df.setMinimumFractionDigits(2);
        ++count;
        jTextArea1.setText(null);
        //presentValue(1,1,1);
        if (!"clicked".equals(pButton.getActionCommand())) {
            jLabel1.setText("Press P first");
        } else {

            if (count == 2) {
                //cal.presentValue(amount,rate,period);
                jTextArea1.setText("" + df.format(cal.futureValueAnnuityDue(amount, rate, period)));
                 count = 0;
            } else {
                jLabel1.setText("FVad, rate, period");

            }
        }
    }//GEN-LAST:event_FVadActionPerformed

    private void BLpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BLpActionPerformed
        // TODO add your handling code here:
        BLp.setActionCommand("blp");
        DecimalFormat df = new DecimalFormat();
        df.setMaximumFractionDigits(2);
        df.setMinimumFractionDigits(2);
        ++count;
        jTextArea1.setText(null);
        //presentValue(1,1,1);
        if (!"clicked".equals(pButton.getActionCommand())) {
            jLabel1.setText("Press P first");
        } else {

            if (count == 2) {
                //cal.presentValue(amount,rate,period);
                //double payment, double rate,  double numOfPayments,double presentValue
                jTextArea1.setText("" + df.format(cal.balloonPayment(payment, rate, numOfPayments,amount)));
                 count = 0;
            } else {
                jLabel1.setText("Payment, rate, period");

            }
        }
    }//GEN-LAST:event_BLpActionPerformed

    private void RRRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RRRActionPerformed
        // TODO add your handling code here:
        RRR.setActionCommand("rate");
        DecimalFormat df = new DecimalFormat();
        df.setMaximumFractionDigits(2);
        df.setMinimumFractionDigits(2);
        ++count;
        jTextArea1.setText(null);
        //presentValue(1,1,1);
        if (!"clicked".equals(pButton.getActionCommand())) {
            jLabel1.setText("Press P first");
        } else {

            if (count == 2) {
                //cal.presentValue(amount,rate,period);
                //double payment, double rate,  double numOfPayments,double presentValue
                jTextArea1.setText("" + df.format(cal.requiredRateOfReturn(payment, amount,period)));
                 count = 0;
            } else {
                jLabel1.setText("Value, rate, period");

            }
        }
        
    }//GEN-LAST:event_RRRActionPerformed

    private void nActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nActionPerformed
        // TODO add your handling code here:
         n.setActionCommand("number");
             n.setActionCommand("rate");
        DecimalFormat df = new DecimalFormat();
        df.setMaximumFractionDigits(2);
        df.setMinimumFractionDigits(2);
        ++count;
        jTextArea1.setText(null);
        //presentValue(1,1,1);
        if (!"clicked".equals(pButton.getActionCommand())) {
            jLabel1.setText("Press P first");
        } else {

            if (count == 2) {
                //cal.presentValue(amount,rate,period);
                //double payment, double rate,  double numOfPayments,double presentValue
                jTextArea1.setText("" + df.format(cal.numberOfPeriods(payment, amount,rate)));
                 count = 0;
            } else {
                jLabel1.setText("Payment, amount, rate");

            }
        }
    }//GEN-LAST:event_nActionPerformed

    private void AdditionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdditionActionPerformed
        // TODO add your handling code here:
        
            flag = true; 
        double n1 = 0,n2 = 0, sum = 0;
        
      
        stack.push(jTextArea1.getText());
        try{
        n1 = Double.parseDouble(stack.pop());
        n2 = Double.parseDouble(stack.pop());
        
        sum = n2 + n1;
       // stack.push(displayPane.getText());
        jTextArea1.setText(String.valueOf(form.format(sum))); 
        }
         catch(EmptyStackException e)
        {
           jTextArea1.setText("Syntax Error"); 
        }
        catch(NumberFormatException e)
        {
            jTextArea1.setText("Invalid Value");
        }
    }//GEN-LAST:event_AdditionActionPerformed

    private void SubtractionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubtractionActionPerformed
        // TODO add your handling code here:
           flag = true; 
        double n1 = 0,n2 = 0, sum = 0;
        
      
        stack.push(jTextArea1.getText());
        try{
        n1 = Double.parseDouble(stack.pop());
        n2 = Double.parseDouble(stack.pop());
        
        sum = n2 - n1;
       // stack.push(displayPane.getText());
        jTextArea1.setText(String.valueOf(form.format(sum))); 
        }
         catch(EmptyStackException e)
        {
           jTextArea1.setText("Syntax Error"); 
        }
        catch(NumberFormatException e)
        {
            jTextArea1.setText("Invalid Value");
        }
    }//GEN-LAST:event_SubtractionActionPerformed

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed
        // TODO add your handling code here:
        double num = Double.parseDouble(jTextArea1.getText());
        num *= -1;
        jTextArea1.setText(String.valueOf(num));
    }//GEN-LAST:event_jButton36ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
        // TODO add your handling code here:
           jTextArea1.setText("");
        
        if(!stack.empty())
        stack.pop();
    }//GEN-LAST:event_jButton35ActionPerformed

    private void calcSwapBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcSwapBtnActionPerformed
        // Code to choose between a normal and fin calculator
        
        
        
    }//GEN-LAST:event_calcSwapBtnActionPerformed

    private void ST03ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ST03ActionPerformed
        // TODO add your handling code here:
        storedValues[2] = jTextArea1.getText();
        jTextArea1.setText(null);
        display = "";
    }//GEN-LAST:event_ST03ActionPerformed

    private void STO2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_STO2ActionPerformed
        // TODO add your handling code here:
        storedValues[1] = jTextArea1.getText();
        jTextArea1.setText(null);
        display = "";
    }//GEN-LAST:event_STO2ActionPerformed

    private void STO1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_STO1ActionPerformed
        // TODO add your handling code here:
          storedValues[0] = jTextArea1.getText();
        jTextArea1.setText(null);
        display = "";
    }//GEN-LAST:event_STO1ActionPerformed

    private void RCLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RCLActionPerformed
        // TODO add your handling code here:
        recall = 1;
    }//GEN-LAST:event_RCLActionPerformed

    private void squaredButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squaredButtonActionPerformed
                     flag = true;
        double n1 = 0,n2 = 0, squared = 0;
        
        stack.push(jTextArea1.getText());
        
        try{
       n1 = Double.parseDouble(stack.pop());
        //n2 = Double.parseDouble(stack.pop());
        
        
        if( n1 != 0 )
            
        {
        //sum = n2 / n1;
        squared = n1*n1;
        
        
       // stack.push(String.valueOf(displayPane.getText()));
        jTextArea1.setText(String.valueOf(form.format(squared)));
        }
        
        else if(n1 == 0){
            jTextArea1.setText(String.valueOf(form.format(squared)));
        }else
        {
            jTextArea1.setText("NaN");
        }
        }
         catch(EmptyStackException e)
        {
           jTextArea1.setText("Syntax Error"); 
        }
        catch(NumberFormatException e)
        {
            jTextArea1.setText("Invalid Value");
        }
    }//GEN-LAST:event_squaredButtonActionPerformed

    private void squaredNumButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squaredNumButtonActionPerformed
              flag = true;
        double n1 = 0,n2 = 0, squared = 0;
        
        stack.push(jTextArea1.getText());
        
        try{
       n1 = Double.parseDouble(stack.pop());
        n2 = Double.parseDouble(stack.pop());
        
        
        
        //sum = n2 / n1;
       // stack.push(String.valueOf(displayPane.getText()));
        squared = Math.pow(n2, n1);
           
        jTextArea1.setText(String.valueOf(form.format(squared)));
        
        
        
        }
         catch(EmptyStackException e)
        {
           jTextArea1.setText("Syntax Error"); 
        }
        catch(NumberFormatException e)
        {
            jTextArea1.setText("Invalid Value");
        }
    }//GEN-LAST:event_squaredNumButtonActionPerformed

    private void squareRootButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squareRootButtonActionPerformed
                    flag = true;
        double n1 = 0,n2 = 0, squared = 0;
        
        stack.push(jTextArea1.getText());
        
        try{
       n1 = Double.parseDouble(stack.pop());
        //n2 = Double.parseDouble(stack.pop());
        
        
        if( n1 != 0 )
            
        {
        //sum = n2 / n1;
        //squared = n1*n1;
        squared = Math.sqrt(n1);
        
       // stack.push(String.valueOf(displayPane.getText()));
        jTextArea1.setText(String.valueOf(form.format(squared)));
        }
        
        else if(n1 == 0){
            jTextArea1.setText(String.valueOf(form.format(squared)));
        }else
        {
            jTextArea1.setText("NaN");
        }
        }
         catch(EmptyStackException e)
        {
           jTextArea1.setText("Syntax Error"); 
        }
        catch(NumberFormatException e)
        {
            jTextArea1.setText("Invalid Value");
        }
    }//GEN-LAST:event_squareRootButtonActionPerformed

    private void jRadioButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jRadioButton1KeyPressed
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_1 :
                OneActionPerformed(null);
                break;

            case KeyEvent.VK_2:
                TwoActionPerformed(null);
                break;
            case KeyEvent.VK_3:
                ThreeActionPerformed(null);
                break;
            case KeyEvent.VK_4:
                FourActionPerformed(null);
                break;
            case KeyEvent.VK_5:
                FiveActionPerformed(null);
                break;
            case KeyEvent.VK_6:
                SixActionPerformed(null);
                break;
            case KeyEvent.VK_7:
                    SevenActionPerformed(null);
                    break;
            case KeyEvent.VK_8:
                    EightActionPerformed(null);
                    break;
            case KeyEvent.VK_9:
                    NineActionPerformed(null);
                    break;
            case KeyEvent.VK_0:
                    ZeroActionPerformed(null);
                    break;
                
                case KeyEvent.VK_NUMPAD1 :
                OneActionPerformed(null);
                break;

            case KeyEvent.VK_NUMPAD2:
                TwoActionPerformed(null);
                break;
            case KeyEvent.VK_NUMPAD3:
                ThreeActionPerformed(null);
                break;
            case KeyEvent.VK_NUMPAD4:
                FourActionPerformed(null);
                break;
            case KeyEvent.VK_NUMPAD5:
                FiveActionPerformed(null);
                break;
            case KeyEvent.VK_NUMPAD6:
                SixActionPerformed(null);
                break;
            case KeyEvent.VK_NUMPAD7:
                    SevenActionPerformed(null);
                    break;
            case KeyEvent.VK_NUMPAD8:
                    EightActionPerformed(null);
                    break;
            case KeyEvent.VK_NUMPAD9:
                    NineActionPerformed(null);
                    break;
            case KeyEvent.VK_NUMPAD0:
                    ZeroActionPerformed(null);
                    break;
                
                case KeyEvent.VK_ENTER:
                    EnterActionPerformed(null);
                    break;
                    
                    case KeyEvent.VK_SUBTRACT:
                    SubtractionActionPerformed(null);
                    break;
                        
                case KeyEvent.VK_DIVIDE:
                    DivisionActionPerformed(null);
                    break;
                    
                case KeyEvent.VK_MULTIPLY:
                    MultiplicationActionPerformed(null);
                    break;
                    
                    case KeyEvent.VK_PLUS:
                    AdditionActionPerformed(null);
                    break;
                    
                    
            
        
    }//GEN-LAST:event_jRadioButton1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RnpCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RnpCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RnpCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RnpCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RnpCalculator().setVisible(true);
            }
        });
    }
      public void appendFraction(String number)
    {
       
        
       fractionDigit += number;
        
       jTextArea1.setText(jTextArea1.getText() + fractionDigit);
       
       fractionDigit = "";
    }
      
      
public  void numbers(int num){
    
   if ("future".equals(PV.getActionCommand()) || "future".equals(PVa.getActionCommand()) || "future".equals(PVad.getActionCommand())
                || "future".equals(FV.getActionCommand()) || "future".equals(FVa.getActionCommand()) || "future".equals(FVad.getActionCommand())) {
            switch (counter) {
                case 0:
                    numAmt += num;
                    System.out.println("" + numAmt);
                    break;
                case 1:
                    numRate += num;
                    System.out.println("" + numRate);
                    break;
                case 2:
                    numPer += num;
                    System.out.println("" + numPer);
                    break;
                /*case 3:
                 paymentAmt += six;
                 break;
                 case 4:
                 paymentNum += six;
                 break;*/
            }
        }
        else if("rate".equals(RRR.getActionCommand())){
            switch (counter) {
                case 0:
                    numAmt += num;
                    System.out.println("" + numAmt);
                    break;
              
                
                case 1:
                 paymentAmt += num;
                 break;
                    case 2:
                    numPer += num;
                    System.out.println("" + numPer);
                    break;
               
            }
        }else if("number".equals(n.getActionCommand())){
           switch (counter) {
                case 0:
                    numAmt += num;
                    System.out.println("" + numAmt);
                    break;
                case 1:
                    numRate += num;
                    System.out.println("" + numRate);
                    break;
               
                case 2:
                 paymentAmt += num;
                 break;
                
            }
        }else if("blp".equals(BLp.getActionCommand())){
            
              switch (counter) {
                case 0:
                    numAmt += num;
                    System.out.println("" + numAmt);
                    break;
                case 1:
                    numRate += num;
                    System.out.println("" + numRate);
                    break;
              
                case 2:
                 paymentAmt += num;
                 break;
                 case 3:
                 paymentNum += num;
                 break;
            }
        }  
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Addition;
    private javax.swing.JButton BLp;
    private javax.swing.JButton CLRSTO;
    private javax.swing.JButton Clearall;
    private javax.swing.JButton Division;
    private javax.swing.JButton Dot;
    private javax.swing.JButton Eight;
    private javax.swing.JButton Enter;
    private javax.swing.JButton Exponent;
    private javax.swing.JButton FV;
    private javax.swing.JButton FVa;
    private javax.swing.JButton FVad;
    private javax.swing.JButton Five;
    private javax.swing.JButton Four;
    private javax.swing.JMenu Help;
    private javax.swing.JButton Multiplication;
    private javax.swing.JButton Nine;
    private javax.swing.JButton One;
    private javax.swing.JButton PV;
    private javax.swing.JButton PVa;
    private javax.swing.JButton PVad;
    private javax.swing.JButton RCL;
    private javax.swing.JButton RRR;
    private javax.swing.JButton ST03;
    private javax.swing.JButton STO1;
    private javax.swing.JButton STO2;
    private javax.swing.JButton Seven;
    private javax.swing.JButton Six;
    private javax.swing.JButton Subtraction;
    private javax.swing.JButton Three;
    private javax.swing.JButton Two;
    private javax.swing.JButton Zero;
    private javax.swing.JButton calcSwapBtn;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton n;
    private javax.swing.JButton pButton;
    private javax.swing.JButton squareRootButton;
    private javax.swing.JButton squaredButton;
    private javax.swing.JButton squaredNumButton;
    // End of variables declaration//GEN-END:variables
}
